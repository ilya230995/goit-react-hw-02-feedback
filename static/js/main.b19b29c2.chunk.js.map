{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptison.module.css","components/SectionTitle/SectionTitle.module.css","components/Container/Container.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/SectionTitle/SectionTitle.js","components/NotificationMessage/NotificationMessage.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positiveFeedbackPercentege","className","s","statisticsFeedback","statisticsFeedbackItem","FeedbackOptions","options","onLeaveFeedback","map","el","index","feedbackBtn","onClick","SectionTitle","title","children","titleForSections","NotificationMessage","message","Container","container","App","state","addFeedback","type","setState","prevState","countTotalFeedback","Object","values","reduce","a","b","countPositiveFeedbackPercentage","Math","round","allFeedbacks","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,mBAAqB,uCAAuC,uBAAyB,6C,sBCAvGD,EAAOC,QAAU,CAAC,YAAc,uC,gBCAhCD,EAAOC,QAAU,CAAC,iBAAmB,yC,gBCArCD,EAAOC,QAAU,CAAC,UAAY,+B,qKCkBfC,MAhBf,YAAgF,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,IAAKC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,2BAC/C,OACE,sBAAKC,UAAWC,IAAEC,mBAAlB,UACE,oBAAGF,UAAWC,IAAEE,uBAAhB,mBAA+CR,KAC/C,oBAAGK,UAAWC,IAAEE,uBAAhB,uBAAmDP,KACnD,oBAAGI,UAAWC,IAAEE,uBAAhB,kBAA8CN,KAC9C,oBAAGG,UAAWC,IAAEE,uBAAhB,oBAAgDL,KAChD,oBAAGE,UAAWC,IAAEE,uBAAhB,+BACqB,IACR,IAAVL,EACIC,EAA6B,EAC9BA,S,gBCAGK,MAXf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAACC,EAAIC,GAAL,OACX,wBAAQT,UAAWC,IAAES,YAAyBC,QAAS,kBAAML,EAAgBE,IAA7E,SACGA,GADoCC,S,gBCIhCG,MARf,YAA4C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC7B,OACE,qCACE,oBAAId,UAAWC,IAAEc,iBAAjB,SAAoCF,IACnCC,MCEQE,MAPf,YAA2C,IAAZC,EAAW,EAAXA,QAC7B,OACE,mCACE,4BAAIA,O,iBCCKC,MAJf,YAAkC,IAAbJ,EAAY,EAAZA,SACnB,OAAO,qBAAKd,UAAWC,IAAEkB,UAAlB,SAA8BL,KC4DxBM,E,4MAtDbC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPyB,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAOE,EAAUF,GAAQ,O,EAKhCG,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKP,OAAOQ,QAAO,SAACC,EAAGC,GAC1C,OAAOD,EAAIC,M,EAIfC,gCAAkC,SAAAlC,GAChC,OAAOmC,KAAKC,MAAO,EAAKb,MAAM1B,KAAOG,EAAS,M,uDAI9C,IAAMqC,EAAeC,KAAKV,qBACtB3B,EAA6BqC,KAAKJ,gCACpCG,GAHK,EAKwBC,KAAKf,MAA5B1B,EALD,EAKCA,KAAMC,EALP,EAKOA,QAASC,EALhB,EAKgBA,IACvB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAcgB,MAAM,0BACpB,cAAC,EAAD,CACER,QAASsB,OAAOU,KAAKD,KAAKf,OAC1Bf,gBAAiB8B,KAAKd,cAExB,cAAC,EAAD,CAAcT,MAAM,eACF,IAAjBsB,EACC,cAAC,EAAD,CAAqBlB,QAAQ,sBAE7B,cAAC,EAAD,CACEnB,MAAOqC,EACPxC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLE,2BAA4BA,W,GA/CtBuC,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b19b29c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsFeedback\":\"Statistics_statisticsFeedback__Md-ql\",\"statisticsFeedbackItem\":\"Statistics_statisticsFeedbackItem__3XTqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptison_feedbackBtn__1p2MM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleForSections\":\"SectionTitle_titleForSections__1rUmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2CVr6\"};","import s from './Statistics.module.css' \r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positiveFeedbackPercentege }) {\r\n  return (\r\n    <div className={s.statisticsFeedback}>\r\n      <p className={s.statisticsFeedbackItem}>Good: {good}</p>\r\n      <p className={s.statisticsFeedbackItem}>Neutural: {neutral}</p>\r\n      <p className={s.statisticsFeedbackItem}>Bad: {bad}</p>\r\n      <p className={s.statisticsFeedbackItem}>Total: {total}</p>\r\n      <p className={s.statisticsFeedbackItem}>\r\n        Positive feedback:{' '}\r\n        {total === 0\r\n          ? (positiveFeedbackPercentege = 0)\r\n          : positiveFeedbackPercentege}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedbackPercentege: PropTypes.number.isRequired,\r\n};\r\n","import s from './FeedbackOptison.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      {options.map((el, index) => (\r\n        <button className={s.feedbackBtn} key={index} onClick={() => onLeaveFeedback(el)}>\r\n          {el}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import s from './SectionTitle.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction SectionTitle({ title, children }) {\r\n  return (\r\n    <>\r\n      <h2 className={s.titleForSections}>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\nexport default SectionTitle;\r\n\r\nSectionTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction NotificationMessage({ message }) {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n}\r\nexport default NotificationMessage;\r\n\r\nNotificationMessage.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import { Component } from 'react';\n\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport SectionTitle from './components/SectionTitle/SectionTitle';\nimport NotificationMessage from './components/NotificationMessage/NotificationMessage';\nimport Container from './components/Container/Container';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = type => {\n    this.setState(prevState => {\n      return {\n        [type]: prevState[type] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((a, b) => {\n      return a + b;\n    });\n  };\n\n  countPositiveFeedbackPercentage = total => {\n    return Math.round((this.state.good / total) * 100);\n  };\n\n  render() {\n    const allFeedbacks = this.countTotalFeedback();\n    let positiveFeedbackPercentege = this.countPositiveFeedbackPercentage(\n      allFeedbacks,\n    );\n    const { good, neutral, bad } = this.state;\n    return (\n      <Container>\n        <SectionTitle title=\"Please leave feedback\" />\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.addFeedback}\n        />\n        <SectionTitle title=\"Statistics\" />\n        {allFeedbacks === 0 ? (\n          <NotificationMessage message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            total={allFeedbacks}\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            positiveFeedbackPercentege={positiveFeedbackPercentege}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}